#summary Here you'll find unstructured tips on maven.
#labels Phase-Implementation

= Introduction =

These are tips, links and general stuff concerning maven that when I find on the web I usually append here.


= Details =

Archetypes stuff:
[ Maven Archetypes for Web Applications by webtide ]
http://www.webtide.com/resources.jsp
[Struts2 archetype]
http://struts.apache.org/2.x/docs/struts-maven-archetype.html
http://svn.apache.org/repos/asf/struts/maven/trunk/struts2-archetype-blank/README.txt

http://maven.zones.apache.org/~maven/builds/branches/

mvn javadoc:javadoc [crea documentazione javadoc]
javadoc:jar source:jar
mvn -Dmaven.test.skip=true
mvn -Dtest=ClassName test

config for surefire plugin in order to attach a debugger
<argLine>-Xrunjdwp:transport=dt_socket,server=y,address=5005</argLine>
<forkMode>once</forkMode>
even better:
-Dmaven.surefire.debug=true


mvn package
compiles, tests and packages your build

mvn install:install-file -DgroupId=<group-id> -DartifactId=<artifact-id> -Dversion=<version> -Dpackaging=<packaging> -DgeneratePom=true -Dfile=<path-to-file> 

like ‘mvn package’, but also installs the artifacts in your local repo

mvn deploy
like ‘mvn install’, but also installs the artifacts in your company repo

mvn eclipse:add-maven-repo -Declipse.workspace="c:/Documents and Settings/Srepfler Srgjan/workspace_jbosside"
mvn eclipse:eclipse -DdownloadSources=true -Dwtpversion=1.0 
(or 1.5 but you need to add the artifact's snapshots repository)


mvn site
generates a web-site with all kinds of optional reports. Not
 working optimally yet

Lifecycle:
http://cvs.peopleware.be/training/maven/maven2/buildLifecyclePhases.html

manifest and main class
maven-jar-plugin
<plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-jar-plugin</artifactId><configuration><archive><manifest><mainClass>foo</mainClass></manifest></archive></configuration></plugin>

Source distribution 1:
Add this to the <build><plugins> section of your pom:

      <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-source-plugin</artifactId>
		<executions>
		  <execution>
			<phase>package</phase>
			<goals>
				<goal>jar</goal>
			</goals>
		  </execution>
		</executions>
      </plugin>
Source distribution 2:
Run mvn -DperformRelease=true deploy

-DperformRelease will run javadoc:jar and source:jar along with your
normal build (attached to package phase, I believe)

Properties links:
http://docs.codehaus.org/display/MAVENUSER/MavenPropertiesGuide
http://maven.apache.org/guides/introduction/introduction-to-profiles.html

Source distribution 3:
source:jar

[maven-antrun-plugin]
http://maven.apache.org/plugins/maven-antrun-plugin/

[maven-surefire-plugin] (Test)
http://maven.apache.org/plugins/maven-surefire-plugin/index.html

[maven-site-plugin]
http://maven.apache.org/plugins/maven-site-plugin/

[jaxb xjc maven 2 plugin]
https://jaxb.dev.java.net/jaxb-maven2-plugin/

[hibernate3-maven-plugin]
http://mojo.codehaus.org/hibernate3-maven-plugin/
http://mojo.codehaus.org/maven-hibernate3/hibernate3-maven-plugin/

[dtddoc-maven-plugin]
dtddoc-maven-plugin is a Maven2 plugin to document DTDs with DTDDoc.
http://dtddoc.sourceforge.net/maven2/intro.html

[maven-jetty-plugin]
Assemble your webapp into a war and automatically deploy it to Jetty.
http://jetty.mortbay.org/maven-plugin/index.html

[maven-jetty-jspc-plugin]
This goal will compile jsps for a webapp so that they can be included in a war.
http://jetty.mortbay.org/jspc-maven-plugin/


Goal		Description

site:deploy	Deploys website using scp/file protocol. For scp protocol, website files are packaged into zip archive, 
		then archive is transfred to remote host, nextly it is un-archived. This method of deployment should 
		normally be much faster then making file by file copy. For file protocol, the files are copied directly 
		to the destination directory.

site:site	Generates the project site.


Some plugins snapshots repositories.
 </pluginRepository>

     <pluginRepository>
       <id>codehaus snapshot repository</id>
       <url>http://snapshots.repository.codehaus.org/</url>
       <releases>
         <enabled>true</enabled>
       </releases>
     </pluginRepository>

<pluginRepository>
       <id>apache snapshot repository</id>
       <url>http://people.apache.org/maven-snapshot-repository</url>
       <releases>
         <enabled>true</enabled>
       </releases>
     </pluginRepository>
     
   </pluginRepositories>

Mojo svn repository:
http://svn.codehaus.org/mojo/trunk/mojo/mojo-sandbox/


Maven2,XDoclet and EJB 2.1 webservices
http://docs.codehaus.org/display/MAVENUSER/Maven2,XDoclet+and+EJB+2.1+webservices